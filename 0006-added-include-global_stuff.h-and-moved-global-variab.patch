From 4b0f603d3bfc5aa82228c480d1c5c9a5bd658236 Mon Sep 17 00:00:00 2001
From: ejovrh <hrvoje.ivanic@gmx.net>
Date: Tue, 2 Aug 2016 23:18:27 +0200
Subject: [PATCH 6/8] - added #include "global_stuff.h" and moved global
 variables there in order to improve readability

---
 misko-prototype/misko-prototype.ino | 56 ++-----------------------------------
 1 file changed, 2 insertions(+), 54 deletions(-)

diff --git a/misko-prototype/misko-prototype.ino b/misko-prototype/misko-prototype.ino
index ca9fd2d..b2745bd 100644
--- a/misko-prototype/misko-prototype.ino
+++ b/misko-prototype/misko-prototype.ino
@@ -8,44 +8,7 @@
 // local files
 #include "gps_config.h" // gps stuff
 #include "pin_definitions.h" // pin layout
-
-//   CONFIG_VERSION MUST BE CHANGED IF ANY CHANGES ARE MADE IN setup.h
-#define CONFIG_VERSION 2 // protection against excessive EEPROM writes
-//   CONFIG_VERSION MUST BE CHANGED IF ANY CHANGES ARE MADE IN setup.h
-
-#define GPSRATE 4800
-#define SERIALRATE 9600
-//BLUETOOTHSERIALRATE is hardcoded in device
-#define NMEA_BUFFERSIZE 80 // plenty big
-
-// global variables start
-
-// initalize OLED display
-IIC_without_ACK OLED(oled_sda_pin, oled_scl_pin); // heavy C++ style instantation, declaration and everything...
-
-char NMEA_buffer[NMEA_BUFFERSIZE] = "";        // string buffer for the NMEA sentence
-unsigned int bufferid = 0; // holds the current position in the NMEA_buffer array, used fo walk through the buffer
-
-char gps_date[9] = "20XXXXXX"; // 0-7 + 1 for '\0'
-char gps_time[7] = "XXXXXX"; // 0-5 + 1 for '\0'
-char gps_logfile[13] = "";
-
-unsigned long bluetooth_button_press_time = millis(); // time of button press
-unsigned long bluetooth_button_release_time = 0; // time of button release
-bool flag_bluetooth_is_on = 0; // flag is BT device is powered on or off
-bool flag_bluetooth_power_toggle_pressed = 0; // flag marks bluetooth button pressed or not - used to recognize button state change for proper high/low handling
-bool flag_bluetooth_power_keep_on = 0;
-
-unsigned long lcd_button_press_time = millis(); // time of button press
-bool flag_lcd_is_on = 0; // flag is BT device is powered on or off
-bool flag_lcd_button_down_pressed = 0; // flag marks button pressed or not
-bool flag_lcd_button_up_pressed = 0; // flag marks button pressed or not
-bool flag_lcd_button_left_pressed = 0; // flag marks button pressed or not
-bool flag_lcd_button_right_pressed = 0; // flag marks button pressed or not
-
-char debug_out[80] = "";
-// global variables end
-
+#include "global_stuff.h" // global variables et al.
 #include "functions.h" // useful functions
 
 void setup() 
@@ -74,11 +37,10 @@ void setup()
   }  
 
   OLED.Initial(); // initializes the display (values are hardcoded in "IIC_without_ACK.cpp"
-
 } // setup end 
 
 #include "gps_functions.h" // gps functions
-   int printed = 0;
+
 void loop() 
 {
   /*
@@ -96,18 +58,4 @@ void loop()
   
   get_nmea_sentences(); // gets NMEA sentences out of the GPS and deals with them
 
-        /*
-          // poor mans debugging
-          if (digitalRead(bluetooth_power_toggle_pin) == HIGH && printed == 0)
-          {
-            Serial.println(" eeprom debug output: ");
-            for (int i = 0; i < 13; i++)
-            {
-              int val = EEPROM[i];
-              sprintf(debug_out, "%d - %d \n", i, val);
-              Serial.print(debug_out);
-            }
-            printed = 1;
-          }
-         */
 } 
-- 
2.9.2.windows.1

